<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util
       https://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <util:properties id="batch" location="classpath:properties/batch.properties"/>

    <bean id="job_sample" parent="simpleJob">
        <property name="name" value="Sample"/>
        <property name="steps">
            <list>
                <bean id="step1_Sample" parent="taskletStep">
                    <property name="tasklet">
                        <bean class="org.batch.quartz.job.SampleTasklet"/>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="job_sampleDetails" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="org.batch.quartz.JobLauncherDetails"/>
        <property name="description" value="샘플 배치 실행"/>
        <property name="jobDataAsMap">
            <map>
                <entry key="jobLauncher" value-ref="jobLauncher"/>
                <entry key="job" value-ref="job_sample"/>
            </map>
        </property>
    </bean>

    <bean id="cronTrigger_sampleScheduleLauncherDetails"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="job_sampleDetails"/>
        <property name="cronExpression" value="#{batch['batch.sample.cronExpression']}"/>
    </bean>

    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="configLocation" value="classpath:properties/quartz.properties"/>
        <property name="triggers">
            <list>
                <ref bean="cronTrigger_sampleScheduleLauncherDetails"/>
            </list>
        </property>
    </bean>

    <!-- core -->
    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository"/>
        <property name="taskExecutor">
            <bean class="org.springframework.core.task.SimpleAsyncTaskExecutor"/>
        </property>
    </bean>


    <!-- Set Job Service -->
    <bean id="jobService" class="org.springframework.batch.admin.service.SimpleJobServiceFactoryBean">
        <property name="jobRepository" ref="jobRepository"/>
        <property name="jobLauncher" ref="jobLauncher"/>
        <property name="jobLocator" ref="jobRegistry"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry"/>

    <bean id="simpleJob" class="org.springframework.batch.core.job.SimpleJob" abstract="true">
        <property name="jobRepository" ref="jobRepository"/>
    </bean>


    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
        <!--<property name="databaseType" value="postgresql"/>-->
        <property name="dataSource" ref="dataSource"/>
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/quartz?serverTimezone=Asia/Seoul"/>
        <property name="username" value="root"/>
        <property name="password" value="0000"/>
    </bean>

    <bean id="taskletStep" class="org.springframework.batch.core.step.tasklet.TaskletStep" abstract="true">
        <property name="jobRepository" ref="jobRepository"/>
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <!-- Annotation 을 사용한 트랜잭션 사용시 활성화 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Transaction manager for a single JDBC DataSource -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

</beans>